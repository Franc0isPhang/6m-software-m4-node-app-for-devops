version: 2.1
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0 #allows us to use heroku
jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Installing dependencies..."
          npm install
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Running tests..."
          npm run test
          
  build-and-push:
    executor: docker/docker #State the environment that we are using
    steps:
      - setup_remote_docker #this allows us to run docker commands
      - checkout
      - docker/check
      - docker/build:
          image: franc0isss/education-space 
          tag: 1.0.1
      - docker/push:
          image: franc0isss/education-space
          tag: 1.0.1

  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - heroku/install #installs heroku cli for our run command
      - checkout
      - run: 
          name: Heroku Container Push # the name of the gorup of commands we are running. By right without the name it can work
          command: |
            heroku container:login
            heroku container:push web -a franc0isss
            heroku container:release web -a franc0isss
        #the push command pushes the image to heroku'scontainer registry
        #the release command deploys the image from heroku's container registry
        
workflows: #defines how each job would run and relate to each other and any other dependent states (ex. only run if pushed to main branch)

  simple_workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - build-and-push:
          requires:
            - test
      - deploy:
          requires:
            - build-and-push

#mini-exercise -add the deploy job so that it depends on build-and-push